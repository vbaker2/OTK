<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" ============================================"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" === ***  THIS POLICY IS READ ONLY ***"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" === If you have the need to customize this policy"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" === please contact CA APIM Support so we can improve customization capability"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" ============================================"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="This policy can be found and should be used as 'Encapsulated Assertion'!"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Client JWT is validated using auth method, alg used during client registration, after which its payload content is verified"/>
        </L7p:CommentAssertion>
        <L7p:SetVariable>
            <L7p:AssertionComment assertionComment="included">
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="// create json to extract values afterwards"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:AssertionComment>
            <L7p:Base64Expression stringValue="JHtjbGllbnRfa2V5X2N1c3RvbX0="/>
            <L7p:ContentType stringValue="application/json; charset=utf-8"/>
            <L7p:DataType variableDataType="message"/>
            <L7p:VariableToSet stringValue="custom_json"/>
        </L7p:SetVariable>
        <L7p:Encapsulated>
            <L7p:EncapsulatedAssertionConfigGuid stringValue="2e6e2ef3-a36f-4548-a2c4-7b369b7ae184"/>
            <L7p:EncapsulatedAssertionConfigName stringValue="OTK Variable Configuration"/>
        </L7p:Encapsulated>
        <L7p:Encapsulated>
            <L7p:EncapsulatedAssertionConfigGuid stringValue="355ca731-f92a-4d64-b41a-8533eedfa651"/>
            <L7p:EncapsulatedAssertionConfigName stringValue="OTK Profile Configuration"/>
            <L7p:Parameters mapValue="included">
                <L7p:entry>
                    <L7p:key stringValue="client_id"/>
                    <L7p:value stringValue="${client_id}"/>
                </L7p:entry>
                <L7p:entry>
                    <L7p:key stringValue="client_key_custom"/>
                    <L7p:value stringValue="${client_key_custom}"/>
                </L7p:entry>
            </L7p:Parameters>
        </L7p:Encapsulated>
        <wsp:All wsp:Usage="Required">
            <L7p:EvaluateJsonPathExpressionV2>
                <L7p:Expression stringValue="openid_registration.response.token_endpoint_auth_method"/>
                <L7p:OtherTargetMessageVariable stringValue="custom_json"/>
                <L7p:Target target="OTHER"/>
                <L7p:VariablePrefix stringValue="auth_method"/>
            </L7p:EvaluateJsonPathExpressionV2>
            <L7p:EvaluateJsonPathExpressionV2>
                <L7p:Expression stringValue="openid_registration.response.token_endpoint_auth_signing_alg"/>
                <L7p:OtherTargetMessageVariable stringValue="custom_json"/>
                <L7p:Target target="OTHER"/>
                <L7p:VariablePrefix stringValue="auth_signing_alg"/>
            </L7p:EvaluateJsonPathExpressionV2>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHthdXRoX21ldGhvZC5yZXN1bHR9"/>
                <L7p:VariableToSet stringValue="client_auth_method"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="JHthdXRoX3NpZ25pbmdfYWxnLnJlc3VsdH0="/>
                <L7p:VariableToSet stringValue="client_auth_signing_alg"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue=""/>
                <L7p:VariableToSet stringValue="client_jwks"/>
            </L7p:SetVariable>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue=""/>
                <L7p:VariableToSet stringValue="client_jwks_uri"/>
            </L7p:SetVariable>
            <wsp:OneOrMore wsp:Usage="Required">
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${client_auth_method}"/>
                    <L7p:Expression2 stringValue="private_key_jwt"/>
                    <L7p:Negate booleanValue="true"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Negated booleanValue="true"/>
                            <L7p:RightValue stringValue="private_key_jwt"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <wsp:All wsp:Usage="Required">
                    <L7p:JSONSchema>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="Validation"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="Check if secret is a JSON object"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:OtherTargetMessageVariable stringValue="client_secret"/>
                        <L7p:ResourceInfo staticResourceInfo="included">
                            <L7p:Document stringValueReference="inline"><![CDATA[{
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "Client Registration Message Validation",
                "description": "Verify that input is a JSON message",
                "type": "object"
                }]]></L7p:Document>
                        </L7p:ResourceInfo>
                        <L7p:Target target="OTHER"/>
                    </L7p:JSONSchema>
                    <L7p:Regex>
                        <L7p:AutoTarget booleanValue="false"/>
                        <L7p:OtherTargetMessageVariable stringValue="client_secret"/>
                        <L7p:ProceedIfPatternMatches booleanValue="false"/>
                        <L7p:Regex stringValue="[&lt;>]|\\&quot;"/>
                        <L7p:Replacement stringValue=""/>
                        <L7p:Target target="OTHER"/>
                    </L7p:Regex>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtjbGllbnRfc2VjcmV0fQ=="/>
                        <L7p:VariableToSet stringValue="client_jwks"/>
                    </L7p:SetVariable>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="LEFT.COMMENT"/>
                                <L7p:value stringValue="jwks"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// client_secret contains a jwk"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtjbGllbnRfc2VjcmV0fQ=="/>
                        <L7p:VariableToSet stringValue="client_jwks_uri"/>
                    </L7p:SetVariable>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="LEFT.COMMENT"/>
                                <L7p:value stringValue="jwks_uri"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// client_secret contains a jwks_uri"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// set jwks/jwks_uri from secret if needed"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:OneOrMore>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="// Extract variables from client_key_custom"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:All>
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${client_auth_method}"/>
                    <L7p:Expression2 stringValue="client_secret_jwt"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:RightValue stringValue="client_secret_jwt"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:ComparisonAssertion>
                    <L7p:Expression1 stringValue="${client_secret}"/>
                    <L7p:Expression2 stringValue=""/>
                    <L7p:Negate booleanValue="true"/>
                    <L7p:Operator operator="EMPTY"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:Negated booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:RightValue stringValue=""/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:DecodeJsonWebToken>
                    <L7p:AssertionComment assertionComment="included">
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// validate jwt signature using client_secret, fails if invalid"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:AssertionComment>
                    <L7p:FailUnverifiedSignature booleanValue="true"/>
                    <L7p:SignatureSecret stringValue="${client_secret}"/>
                    <L7p:SourcePayload stringValue="${client_assertion}"/>
                    <L7p:TargetVariablePrefix stringValue="client_jwt"/>
                    <L7p:ValidationType stringValue="Using Secret"/>
                </L7p:DecodeJsonWebToken>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// auth_method = &quot;client_secret_jwt&quot;"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <wsp:All wsp:Usage="Required">
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${client_auth_method}"/>
                    <L7p:Expression2 stringValue="private_key_jwt"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:RightValue stringValue="private_key_jwt"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:DecodeJsonWebToken>
                    <L7p:AssertionComment assertionComment="included">
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// just decode to get &quot;kid&quot;, no validation"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:AssertionComment>
                    <L7p:SourcePayload stringValue="${client_assertion}"/>
                    <L7p:TargetVariablePrefix stringValue="decoded_jwt"/>
                    <L7p:ValidationType stringValue="None"/>
                </L7p:DecodeJsonWebToken>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtkZWNvZGVkX2p3dC5oZWFkZXIua2lkfQ=="/>
                    <L7p:VariableToSet stringValue="jwt_kid"/>
                </L7p:SetVariable>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${client_jwks}"/>
                            <L7p:Expression2 stringValue=""/>
                            <L7p:Negate booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:DecodeJsonWebToken>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// validate jwt signature using jwks, fails if invalid"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:FailUnverifiedSignature booleanValue="true"/>
                            <L7p:KeyId stringValue="${jwt_kid}"/>
                            <L7p:KeyType stringValue="JSON Web Key Set"/>
                            <L7p:PrivateKeySource stringValue="${client_jwks}"/>
                            <L7p:SourcePayload stringValue="${client_assertion}"/>
                            <L7p:TargetVariablePrefix stringValue="client_jwt"/>
                            <L7p:ValidationType stringValue="Using Recipient Key From Context Variable"/>
                        </L7p:DecodeJsonWebToken>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtjbGllbnRfandrc30="/>
                            <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="jwks_json"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="jwks"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${client_jwks}"/>
                            <L7p:Expression2 stringValue=""/>
                            <L7p:Negate booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:All wsp:Usage="Required">
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtjbGllbnRfandrc30="/>
                                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="client_jwks_temp"/>
                                </L7p:SetVariable>
                                <L7p:EvaluateJsonPathExpressionV2>
                                    <L7p:Expression stringValue="keys[0]"/>
                                    <L7p:OtherTargetMessageVariable stringValue="client_jwks_temp"/>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:VariablePrefix stringValue="client_jwks_json_path"/>
                                </L7p:EvaluateJsonPathExpressionV2>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtjbGllbnRfandrc19qc29uX3BhdGgucmVzdWx0fQ=="/>
                                    <L7p:VariableToSet stringValue="client_jwks"/>
                                </L7p:SetVariable>
                            </wsp:All>
                            <L7p:TrueAssertion/>
                            <L7p:assertionComment>
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// if single key os provided in a JWKS"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:assertionComment>
                        </wsp:OneOrMore>
                        <L7p:DecodeJsonWebToken>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// validate jwt signature using jwks, fails if invalid"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:DetachedJwsContent stringValue=""/>
                            <L7p:FailUnverifiedSignature booleanValue="true"/>
                            <L7p:KeyType stringValue="JSON Web Key"/>
                            <L7p:PrivateKeySource stringValue="${client_jwks}"/>
                            <L7p:SourcePayload stringValue="${client_assertion}"/>
                            <L7p:TargetVariablePrefix stringValue="client_jwt"/>
                            <L7p:ValidationType stringValue="Using Recipient Key From Context Variable"/>
                        </L7p:DecodeJsonWebToken>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtjbGllbnRfandrc30="/>
                            <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="jwks_json"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="jwk"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${client_jwks_uri}"/>
                            <L7p:Expression2 stringValue=""/>
                            <L7p:Negate booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:Include>
                            <L7p:PolicyGuid stringValue="4c1beb3c-0300-443e-beb2-407cfc2bf6bb"/>
                            <L7p:PolicyName stringValue="#OTK Client JWT Validation"/>
                        </L7p:Include>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="LEFT.COMMENT"/>
                                    <L7p:value stringValue="jwks_uri"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// validate using jwks, jwk or jwks_uri"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:OneOrMore>
                <wsp:OneOrMore wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:Expression1 stringValue="${oauth2_profile.fapi_advanced}"/>
                        <L7p:Expression2 stringValue="false"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item binary="included">
                                <L7p:RightValue stringValue="false"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <wsp:All wsp:Usage="Required">
                        <L7p:EvaluateJsonPathExpressionV2>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// array of keys"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:Expression stringValue="keys"/>
                            <L7p:OtherTargetMessageVariable stringValue="jwks_json"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="jwks_keys"/>
                        </L7p:EvaluateJsonPathExpressionV2>
                        <L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="jwks_keys.results" variablePrefix="jwks_key">
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtqd2tzX2tleS5jdXJyZW50fQ=="/>
                                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="jwks_key_json"/>
                                    </L7p:SetVariable>
                                    <L7p:EvaluateJsonPathExpressionV2>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="find kid"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    <L7p:Expression stringValue="kid"/>
                                    <L7p:OtherTargetMessageVariable stringValue="jwks_key_json"/>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:VariablePrefix stringValue="jwks_kid"/>
                                    </L7p:EvaluateJsonPathExpressionV2>
                                    <L7p:ComparisonAssertion>
                                    <L7p:Expression1 stringValue="${jwks_kid.result}"/>
                                    <L7p:Expression2 stringValue="${jwt_kid}"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:RightValue stringValue="${jwt_kid}"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:EvaluateJsonPathExpressionV2>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="the first item in x5c is the client certificate"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    <L7p:Expression stringValue="x5c[0]"/>
                                    <L7p:OtherTargetMessageVariable stringValue="jwks_key_json"/>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:VariablePrefix stringValue="clientCertificate"/>
                                    </L7p:EvaluateJsonPathExpressionV2>
                                    <L7p:EncodeDecode>
                                    <L7p:CharacterEncoding stringValueNull="null"/>
                                    <L7p:SourceVariableName stringValue="clientCertificate.result"/>
                                    <L7p:TargetDataType variableDataType="cert"/>
                                    <L7p:TargetVariableName stringValue="clientX5Cert"/>
                                    <L7p:TransformType transformType="BASE64_DECODE"/>
                                    </L7p:EncodeDecode>
                                    <L7p:CertificateAttributes>
                                    <L7p:SourceVariable stringValue="clientX5Cert"/>
                                    <L7p:SourceVariableEnabled booleanValue="true"/>
                                    </L7p:CertificateAttributes>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtjZXJ0aWZpY2F0ZS50aHVtYnByaW50U0hBMjU2fQ=="/>
                                    <L7p:VariableToSet stringValue="mTLS_certificate_thumbprint"/>
                                    </L7p:SetVariable>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
                                    <L7p:VariableToSet stringValue="jwks_key.break"/>
                                    </L7p:SetVariable>
                                </wsp:All>
                                <L7p:TrueAssertion>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="//never fail run each assertion"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                </L7p:TrueAssertion>
                            </wsp:OneOrMore>
                            <L7p:assertionComment>
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// loop through all keys"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:assertionComment>
                        </L7p:ForEachLoop>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// auth_method = &quot;private_key_jwt&quot;"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="// client_secret_jwt or private_key_jwt"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
        <wsp:All wsp:Usage="Required">
            <L7p:Encapsulated>
                <L7p:AssertionComment assertionComment="included">
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// extracts jwt values for validation"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:AssertionComment>
                <L7p:EncapsulatedAssertionConfigGuid stringValue="6a3c3ed0-ec52-4a6f-b8a0-424fc9804cff"/>
                <L7p:EncapsulatedAssertionConfigName stringValue="OTK Client JWT Values"/>
                <L7p:Parameters mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="jwt_header"/>
                        <L7p:value stringValue="${client_jwt.header}"/>
                    </L7p:entry>
                    <L7p:entry>
                        <L7p:key stringValue="jwt_payload"/>
                        <L7p:value stringValue="${client_jwt.payload}"/>
                    </L7p:entry>
                </L7p:Parameters>
            </L7p:Encapsulated>
            <wsp:OneOrMore wsp:Usage="Required">
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// token_endpoint_auth_signing_alg is not provided during registration"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${client_auth_signing_alg}"/>
                        <L7p:Expression2 stringValue=""/>
                        <L7p:Operator operator="EMPTY"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Operator operator="EMPTY"/>
                                <L7p:RightValue stringValue=""/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:ComparisonAssertion>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// validate if token_endpoint_auth_method is provided "/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${client_auth_method}"/>
                        <L7p:Expression2 stringValue="private_key_jwt"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="private_key_jwt"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:ComparisonAssertion>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// check against RS256 for private_key_jwt auth method"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${jwt_alg}"/>
                        <L7p:Expression2 stringValue="RS256"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="RS256"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="LEFT.COMMENT"/>
                                <L7p:value stringValue="private_key_jwt"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// token_endpoint_auth_signing_alg is not provided during registration"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// token_endpoint_auth_signing_alg is not provided during registration"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${client_auth_signing_alg}"/>
                        <L7p:Expression2 stringValue=""/>
                        <L7p:Operator operator="EMPTY"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Operator operator="EMPTY"/>
                                <L7p:RightValue stringValue=""/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:ComparisonAssertion>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// validate if token_endpoint_auth_method is provided "/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${client_auth_method}"/>
                        <L7p:Expression2 stringValue="client_secret_jwt"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="client_secret_jwt"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:ComparisonAssertion>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="// check against HS256 for client_secret_jwt auth method"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${jwt_alg}"/>
                        <L7p:Expression2 stringValue="HS256"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:RightValue stringValue="HS256"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="LEFT.COMMENT"/>
                                <L7p:value stringValue="client_secret_jwt"/>
                            </L7p:entry>
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// token_endpoint_auth_signing_alg is not provided during registration"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:All>
                <L7p:ComparisonAssertion>
                    <L7p:AssertionComment assertionComment="included">
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// token_endpoint_auth_signing_alg is provided, check if it matches the alg specified in the request header"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:AssertionComment>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${jwt_alg}"/>
                    <L7p:Expression2 stringValue="${client_auth_signing_alg}"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:RightValue stringValue="${client_auth_signing_alg}"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="Validate token_endpoint_auth_signing_alg"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:OneOrMore>
            <L7p:ComparisonAssertion>
                <L7p:AssertionComment assertionComment="included">
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// issuer MUST be equal to client_id"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:AssertionComment>
                <L7p:CaseSensitive booleanValue="false"/>
                <L7p:Expression1 stringValue="${iss}"/>
                <L7p:Expression2 stringValue="${client_id}"/>
                <L7p:Predicates predicates="included">
                    <L7p:item binary="included">
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:RightValue stringValue="${client_id}"/>
                    </L7p:item>
                </L7p:Predicates>
            </L7p:ComparisonAssertion>
            <L7p:ComparisonAssertion>
                <L7p:AssertionComment assertionComment="included">
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// subject MUST be equal to client_id"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:AssertionComment>
                <L7p:CaseSensitive booleanValue="false"/>
                <L7p:Expression1 stringValue="${sub}"/>
                <L7p:Expression2 stringValue="${client_id}"/>
                <L7p:Predicates predicates="included">
                    <L7p:item binary="included">
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:RightValue stringValue="${client_id}"/>
                    </L7p:item>
                </L7p:Predicates>
            </L7p:ComparisonAssertion>
            <L7p:ComparisonAssertion>
                <L7p:AssertionComment assertionComment="included">
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// aud claim MUST contain server's endpoint"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:AssertionComment>
                <L7p:CaseSensitive booleanValue="false"/>
                <L7p:Expression1 stringValue="${aud}"/>
                <L7p:Expression2 stringValue="${audience}"/>
                <L7p:MultivaluedComparison multivaluedComparison="ANY"/>
                <L7p:Operator operator="CONTAINS"/>
                <L7p:Predicates predicates="included">
                    <L7p:item binary="included">
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Operator operator="CONTAINS"/>
                        <L7p:RightValue stringValue="${audience}"/>
                    </L7p:item>
                </L7p:Predicates>
            </L7p:ComparisonAssertion>
            <L7p:ComparisonAssertion>
                <L7p:AssertionComment assertionComment="included">
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// check expiry"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:AssertionComment>
                <L7p:CaseSensitive booleanValue="false"/>
                <L7p:Expression1 stringValue="${exp}"/>
                <L7p:Expression2 stringValue="${gateway.time.seconds}"/>
                <L7p:Operator operator="GT"/>
                <L7p:Predicates predicates="included">
                    <L7p:item binary="included">
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Operator operator="GT"/>
                        <L7p:RightValue stringValue="${gateway.time.seconds}"/>
                    </L7p:item>
                </L7p:Predicates>
            </L7p:ComparisonAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="=== Token should only be used once. If it is replayed, return error ==="/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="Spec recommends that the client JWT should not have expiry dates too far in the future"/>
            </L7p:CommentAssertion>
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="Narrower window of valid JWT reduces the risk of replay attack"/>
            </L7p:CommentAssertion>
            <L7p:Encapsulated>
                <L7p:EncapsulatedAssertionConfigGuid stringValue="b289856a-776b-47d9-9177-cf252b1e2bc4"/>
                <L7p:EncapsulatedAssertionConfigName stringValue="OTK Replay Attack Protection"/>
                <L7p:Parameters mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="cacheId"/>
                        <L7p:value stringValue="clientJwtReplay"/>
                    </L7p:entry>
                    <L7p:entry>
                        <L7p:key stringValue="exp"/>
                        <L7p:value stringValue="${exp}"/>
                    </L7p:entry>
                    <L7p:entry>
                        <L7p:key stringValue="identifier"/>
                        <L7p:value stringValue="${jti}"/>
                    </L7p:entry>
                </L7p:Parameters>
            </L7p:Encapsulated>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="LEFT.COMMENT"/>
                        <L7p:value stringValue="validate"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:All>
    </wsp:All>
</wsp:Policy>
