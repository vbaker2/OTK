<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Policy Fragment: #OTK Generate JWT OAuth Token"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Target policy: OTK Generate JWT OAuth Token"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Enable the below assertions to generate JWT based access_token"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Variable 'custom' includes session information and preferred user"/>
        </L7p:CommentAssertion>
        <L7p:SetVariable>
            <L7p:Base64Expression stringValue=""/>
            <L7p:DataType variableDataType="dateTime"/>
            <L7p:DateFormat stringValue="&lt;Second Timestamp>"/>
            <L7p:DateOffsetExpression stringValue="${lifetime}"/>
            <L7p:VariableToSet stringValue="exp"/>
        </L7p:SetVariable>
        <L7p:SetVariable>
            <L7p:Base64Expression stringValue="JHtleHAuc2Vjb25kc30="/>
            <L7p:VariableToSet stringValue="at_jwt_exp"/>
        </L7p:SetVariable>
        <L7p:SetVariable>
            <L7p:Base64Expression stringValue="JHtjdXN0b21fZGF0YX0="/>
            <L7p:ContentType stringValue="application/json; charset=utf-8"/>
            <L7p:DataType variableDataType="message"/>
            <L7p:VariableToSet stringValue="custom_json"/>
        </L7p:SetVariable>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Below 'All Assertion' includes preferred user into the JWT payload if scope includes 'openid'"/>
        </L7p:CommentAssertion>
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:ComparisonAssertion>
                    <L7p:Expression1 stringValue="${mTLS_certificate_thumbprint}"/>
                    <L7p:Expression2 stringValue=""/>
                    <L7p:Negate booleanValue="true"/>
                    <L7p:Operator operator="EMPTY"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:Negated booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:RightValue stringValue=""/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:Encapsulated>
                    <L7p:EncapsulatedAssertionConfigGuid stringValue="bed74d70-cc8b-46b8-8efc-f5a8a995b2f3"/>
                    <L7p:EncapsulatedAssertionConfigName stringValue="OTK Encode base64url"/>
                    <L7p:Parameters mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="base64_encoded"/>
                            <L7p:value stringValue="${mTLS_certificate_thumbprint}"/>
                        </L7p:entry>
                    </L7p:Parameters>
                </L7p:Encapsulated>
                <L7p:SetVariable>
                    <L7p:AssertionComment assertionComment="included">
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// add confirmation member as certificate thumbprint "/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:AssertionComment>
                    <L7p:Base64Expression stringValue="ImNuZiI6IHsNCiAgIng1dCNTMjU2IjogIiR7YmFzZTY0dXJsX2VuY29kZWR9Ig0KfSw="/>
                    <L7p:VariableToSet stringValue="cnf"/>
                </L7p:SetVariable>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="add cnf if cert thumbprint is not emtpy"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <L7p:SetVariable>
                <L7p:AssertionComment assertionComment="included">
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="LEFT.COMMENT"/>
                            <L7p:value stringValue="//default"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:AssertionComment>
                <L7p:Base64Expression stringValue=""/>
                <L7p:VariableToSet stringValue="cnf"/>
            </L7p:SetVariable>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="// Set jwt cnf value"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
        <wsp:All wsp:Usage="Required">
            <L7p:Split>
                <L7p:IgnoreEmptyValues booleanValue="true"/>
                <L7p:InputVariable stringValue="resource"/>
                <L7p:OutputVariable stringValue="resource.tokens"/>
                <L7p:SplitPattern stringValue=" "/>
            </L7p:Split>
            <L7p:Join>
                <L7p:InputVariable stringValue="resource.tokens"/>
                <L7p:JoinSubstring stringValue="&quot;, &quot;"/>
                <L7p:OutputVariable stringValue="resource.temp"/>
            </L7p:Join>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="WyIke3Jlc291cmNlLnRlbXB9Il0="/>
                <L7p:VariableToSet stringValue="resource.array"/>
            </L7p:SetVariable>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="LEFT.COMMENT"/>
                        <L7p:value stringValue="Audience array"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:All>
        <wsp:OneOrMore wsp:Usage="Required">
            <L7p:ComparisonAssertion>
                <L7p:Expression1 stringValue="${act}"/>
                <L7p:Expression2 stringValue=""/>
                <L7p:Operator operator="EMPTY"/>
                <L7p:Predicates predicates="included">
                    <L7p:item binary="included">
                        <L7p:Operator operator="EMPTY"/>
                        <L7p:RightValue stringValue=""/>
                    </L7p:item>
                </L7p:Predicates>
            </L7p:ComparisonAssertion>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="ImFjdCI6IHske2FjdH19LA=="/>
                <L7p:VariableToSet stringValue="act"/>
            </L7p:SetVariable>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="// act claim"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
        <wsp:OneOrMore wsp:Usage="Required">
            <L7p:CommentAssertion>
                <L7p:Comment stringValue="Disable the 'All Assertion' below if preferred user need not be included in payload"/>
            </L7p:CommentAssertion>
            <wsp:All wsp:Usage="Required">
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${scope}"/>
                    <L7p:Expression2 stringValue=""/>
                    <L7p:Negate booleanValue="true"/>
                    <L7p:Operator operator="EMPTY"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Negated booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:RightValue stringValue=""/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:ComparisonAssertion>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${custom_json.mainpart}"/>
                    <L7p:Expression2 stringValue=""/>
                    <L7p:Negate booleanValue="true"/>
                    <L7p:Operator operator="EMPTY"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Negated booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:RightValue stringValue=""/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:Regex>
                    <L7p:AutoTarget booleanValue="false"/>
                    <L7p:CaseInsensitive booleanValue="true"/>
                    <L7p:OtherTargetMessageVariable stringValue="scope"/>
                    <L7p:Regex stringValue="openid"/>
                    <L7p:RegexName stringValue="Proceed if openid in scope"/>
                    <L7p:Replacement stringValue=""/>
                    <L7p:Target target="OTHER"/>
                </L7p:Regex>
                <L7p:EvaluateJsonPathExpressionV2>
                    <L7p:AssertionComment assertionComment="included">
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="// Extract preferred owner"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:AssertionComment>
                    <L7p:Expression stringValue="username"/>
                    <L7p:OtherTargetMessageVariable stringValue="custom_json"/>
                    <L7p:Target target="OTHER"/>
                    <L7p:VariablePrefix stringValue="owner"/>
                </L7p:EvaluateJsonPathExpressionV2>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="ew0KICAiaXNzIjogIiR7aXNzfSIsDQogICJpYXQiOiR7Z2F0ZXdheS50aW1lLnNlY29uZHN9LA0KICAiYXVkIjoke3Jlc291cmNlLmFycmF5fSwNCiAgImV4cCI6JHthdF9qd3RfZXhwfSwNCiAgImp0aSI6IiR7anRpfSIsDQogICR7Y25mfQ0KICAke2FjdH0NCiAgImNsaWVudF9pZCI6ICIke2F1ZH0iLA0KICAic2NvcGUiOiIke3Njb3BlfSIsDQogICJ0b2tlbl9kZXRhaWxzIjogew0KICAgICJzY29wZSI6IiR7c2NvcGV9IiwNCiAgICAiZXhwaXJlc19pbiI6JHtsaWZldGltZX0sDQogICAgInRva2VuX3R5cGUiOiJCZWFyZXIiLA0KICAgICJwcmVmZXJyZWRfdXNlcm5hbWUiOiIke293bmVyLnJlc3VsdH0iLA0KICAgICJjbGllbnRfa2V5IjogIiR7YXVkfSINCiAgfQ0KfQ=="/>
                    <L7p:VariableToSet stringValue="payload"/>
                </L7p:SetVariable>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="// payload will include preferred_owner in this branch"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:All>
            <L7p:SetVariable>
                <L7p:Base64Expression stringValue="ew0KICAiaXNzIjogIiR7aXNzfSIsDQogICJpYXQiOiR7Z2F0ZXdheS50aW1lLnNlY29uZHN9LA0KICAiYXVkIjoke3Jlc291cmNlLmFycmF5fSwNCiAgImV4cCI6JHthdF9qd3RfZXhwfSwNCiAgImp0aSI6IiR7anRpfSIsDQogICR7Y25mfQ0KICAke2FjdH0NCiAgImNsaWVudF9pZCI6ICIke2F1ZH0iLA0KICAic2NvcGUiOiIke3Njb3BlfSIsDQogICJ0b2tlbl9kZXRhaWxzIjogew0KICAgICJzY29wZSI6IiR7c2NvcGV9IiwNCiAgICAiZXhwaXJlc19pbiI6JHtsaWZldGltZX0sDQogICAgInRva2VuX3R5cGUiOiJCZWFyZXIiLA0KICAgICJjbGllbnRfa2V5IjogIiR7YXVkfSINCiAgfQ0KfQ=="/>
                <L7p:VariableToSet stringValue="payload"/>
            </L7p:SetVariable>
        </wsp:OneOrMore>
        <L7p:EncodeJsonWebToken>
            <L7p:AssertionComment assertionComment="included">
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue="// add header 'kid'"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:AssertionComment>
            <L7p:EncryptionSourceType intValue="2"/>
            <L7p:HeaderAction stringValue="Merge to Generated Header"/>
            <L7p:KeyAlias stringValue="ssl"/>
            <L7p:KeyGoid goidValue="00000000000000000000000000000002"/>
            <L7p:SignPayload booleanValue="true"/>
            <L7p:SignatureAlgorithm stringValue="RS256"/>
            <L7p:SignatureSourceType intValue="1"/>
            <L7p:SourceHeaders stringValue="${kid_header}"/>
            <L7p:SourceVariable stringValue="${payload}"/>
            <L7p:TargetVariable stringValue="at_jwt"/>
        </L7p:EncodeJsonWebToken>
        <L7p:SetVariable>
            <L7p:Base64Expression stringValue="JHthdF9qd3QuY29tcGFjdH0="/>
            <L7p:VariableToSet stringValue="at_jwt"/>
        </L7p:SetVariable>
    </wsp:All>
</wsp:Policy>
